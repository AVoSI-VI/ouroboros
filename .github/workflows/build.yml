name: Build

on:
  release:
    types: [published]

jobs:
  test:
    name: Docker Test on ubuntu-latest
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: amd64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        driver-opts: network=host
    - name: Update Version String
      run: |
        sed -i -r 's/VERSION = "custom"/VERSION = "0.0+test"/' pyouroboros/__init__.py
        echo $?\
    - name: Build Docker
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: localhost:5000/tester/ouroboros:test
    - name: Test with Docker
      run: |
        sudo mkdir -p /app/pyouroboros/hooks
        docker run --rm --name ouroboros -v /var/run/docker.sock:/var/run/docker.sock localhost:5000/tester/ouroboros:test --run-once --dry-run
  build:
    name: Docker Build on ubuntu-latest
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Check Credentials
      id: check_credentials
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_CLITOKEN: ${{ secrets.DOCKER_CLITOKEN }}
      run: |
        if [ "${DOCKER_USER}" == "" ]; then
          echo "Missing User"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        elif [ "${DOCKER_CLITOKEN}" == "" ]; then
          echo "Missing Cli Token"
          echo "##[set-output name=missingsecrets;]$(echo yes)"
        else
          echo "All secrets present"
          echo "##[set-output name=missingsecrets;]$(echo no)"
        fi
    - name: Checkout Repository
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Get Revision Variables
      id: build_env
      run: |
        echo ${GITHUB_REF:10}
        echo "branch=${GITHUB_REF:10}" >> $GITHUB_OUTPUT
    - name: Set up QEMU
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: docker/setup-qemu-action@v2
      with:
        platforms: amd64,arm64,arm
    - name: Set up Docker Buildx
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
    - name: Login to DockerHub Registry
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_CLITOKEN }}
        logout: true
    - name: Login to GitHub Container Registry
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        logout: true
    - name: Update Version String
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      env:
        OUROBOROS_VERSION: ${{ steps.build_env.outputs.branch }}
      run: |
        sed -i -r 's/VERSION = "custom"/VERSION = "'$OUROBOROS_VERSION'"/' pyouroboros/__init__.py
        echo $?\
    - name: Build and Push Docker
      if: contains(steps.check_credentials.outputs.missingsecrets, 'no')
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: |
          ${{ secrets.DOCKER_USER }}/ouroboros:${{ steps.build_env.outputs.branch }}
          ${{ secrets.DOCKER_USER }}/ouroboros:latest
          ghcr.io/${{ github.repository_owner }}/ouroboros:${{ steps.build_env.outputs.branch }}
          ghcr.io/${{ github.repository_owner }}/ouroboros:latest
